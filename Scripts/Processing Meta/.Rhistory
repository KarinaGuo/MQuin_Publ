library(tidyverse)
# Reading in datasets
full_table <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Full_table.csv") # Maternal ID and the number of seedlings (n) grown
colnames(full_table) <- c("FID", "SeedlingNumb", "species", "latitude", "longitude", "Pop", "ID", "IID")
outgroups <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Outgroups.csv") #Manually curated outgroup list from other datasets and external info from Jason G Bragg
colnames(outgroups) <- c("SampleNumb", "WellID", "SampleName", "NSWID", "Concentration", "species", "Site", "pops", "latitude", "longitude")
sample_list_mquin_PBI <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/sample_list_mquin_PBI.csv") # IID is the defining ID for each seedling. Heights (cm) were measured at two points at 23/08/23 and 16/09/23. FID is the maternal ID.
parent_mquin_rust <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/mquin_rust_phenotypic_data_20201218.csv") # Rust data of parent individuals
colnames(parent_mquin_rust) <- c("species", "NSWID", "FID", "latitude", "longitude", "height", "rust_infection", "LeavesShootInfect", "LeavesShootRustSchore1.5", "MinorBranchDB", "MajorBranchDB", "CrownDensity", "Notes")
parent_mquin_rust$LeavesShootInfect <- gsub("1-May", "1-5", parent_mquin_rust$LeavesShootInfect)
parent_mquin_rust$LeavesShootInfect <- gsub("Oct-50", "10-50", parent_mquin_rust$LeavesShootInfect)
parent_mquin_rust$LeavesShootInfect <- gsub("5-Oct", "5-10", parent_mquin_rust$LeavesShootInfect)
#parent_jgb <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Melq_sampled_fam_info.csv") # Population allocation is wrong
#colnames(parent_jgb) <- c("species", "FID", "latitude", "longitude", "Pop")
tissue_db_full <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Tissue-2023-12-13_105348.csv")
tissue_db <- tissue_db_full %>% dplyr::select(nswNumber, acceptedName, eventKey, decimalLongitude, decimalLatitude)
colnames(tissue_db) <- c("FID", "species", "Pop", "longitude", "latitude")
seedling_mquin_rust <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/mq_phenotypes.csv") # Rust data of seedling individuals
sample_lib <- read.table("~/RBGSyd_Technical Officer/MQuin/Processing Meta/geno_library_list.txt", header=TRUE) # sample_lib has the library names of all samples that were genotyped. They are named in the format of S_IID_Sample# or NSWID_IID_Sample#
plate_1 <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/plates 1-7 library prep(1).csv") # 1. Meta data for the library names, includes sample number and sample ID used to generate the library names
plate_2 <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/plate 8 library prep(1).csv") # 2. Meta data for the library names, includes sample number and sample ID used to generate the library names
seedlings_all <- read.csv ("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Mquin_samples_pheno.csv") # Meta data for seedlings including height and COI of all seedlings, including those that didn't get genotypes
colnames(seedlings_all) <- c("IID", "ph1", "ph2", "COI", "NSWID", "n","species", "latitude", 'longitude', "pop", "ID")
IID_RustScore <- read.csv ("~/RBGSyd_Technical Officer/MQuin/Processing Meta/IID_RustScore.csv")
CSIRO_seedlot <- read.csv ("~/RBGSyd_Technical Officer/MQuin/Processing Meta/CSIRO_Seedlot.csv") # Population information for CSIRO seedlot (Mquin QLD samples)
CSIRO_seedlot$Latitude <- gsub("S", "", CSIRO_seedlot$Latitude)
CSIRO_seedlot$Latitude <- as.numeric(paste0("-", CSIRO_seedlot$Latitude))
CSIRO_seedlot$Latitude <- as.numeric(CSIRO_seedlot$Latitude/10000)
CSIRO_seedlot$Longitude <- as.numeric(CSIRO_seedlot$Longitude/10000)
### Creating master datasets
## Parent datasets: NSWID, Library name, species name, infection, library details, outgroups
# Trimming full_table to one per maternal individual
full_table_trim <- full_table %>% group_by(FID) %>% filter(IID == max(IID)) %>% ungroup()
# Merging sample_lib and full_table_trim by FID first working with libraries of NSW_* then NSW*
sample_lib_NSW_ <- grep("NSW_", sample_lib$LIBRARY, value = TRUE)
FID <- sub("^NSW_(\\d+)_.*", "\\1", sample_lib_NSW_)
NSWID <- paste0("NSW", FID)
FID <- paste0("NSW_", FID)
sample_lib_NSW_ID <- as.data.frame(cbind(NSWID, FID, sample_lib_NSW_))
colnames(sample_lib_NSW_ID) <- c("NSWID", "FID", "sample_lib_NSW")
sample_lib_NSW <- grep("^NSW\\d+[^_]", sample_lib$LIBRARY, value = TRUE)
FID <- sub("^NSW(\\d+).*", "\\1", sample_lib_NSW)
NSWID <- paste0("NSW", FID)
FID <- paste0("NSW_", FID)
sample_lib_NSWID <- as.data.frame(cbind(NSWID, FID, sample_lib_NSW))
sample_lib_NSWBoth <- rbind(sample_lib_NSW_ID, sample_lib_NSWID)
sample_lib_full <- merge(sample_lib_NSWBoth, full_table_trim, by="FID", all=TRUE)
parent_meta <- merge(sample_lib_full, parent_mquin_rust, by=c("NSWID","FID", "species", "longitude", "latitude"), all=TRUE)
parent_meta$Pop[is.na(parent_meta$Pop)] <- tissue_db$Pop[match(parent_meta$NSWID,tissue_db$FID)][which(is.na(parent_meta$Pop))]
#parent_meta$Pop[is.na(parent_meta$Pop)] <- parent_jgb$Pop[match(parent_meta$NSWID,parent_jgb$FID)][which(is.na(parent_meta$Pop))]
parent_meta$longitude[is.na(parent_meta$longitude)] <- tissue_db$longitude[match(parent_meta$NSWID,tissue_db$FID)][which(is.na(parent_meta$longitude))]
parent_meta$latitude[is.na(parent_meta$latitude)] <- tissue_db$latitude[match(parent_meta$NSWID,tissue_db$FID)][which(is.na(parent_meta$latitude))]
outgroups$latitude[is.na(outgroups$latitude)] <- CSIRO_seedlot$Latitude[match(outgroups$pops,CSIRO_seedlot$pops)][which(is.na(outgroups$latitude))]
## Outgroup datasets
# Library names
outgroups_NSW <- grep("^NSW\\d+[^_]", outgroups$NSWID, value = TRUE)
FID <- sub("^NSW(\\d+).*", "\\1", outgroups_NSW)
NSWID <- paste0("NSW", FID)
FID <- paste0("NSW_", FID)
outgroups_NSWID <- as.data.frame(cbind(NSWID, FID))
sample_lib_full_outtrimmed <- sample_lib_full %>% dplyr::select (FID, NSWID, sample_lib_NSW)
outgroups_geno <- merge(outgroups_NSWID, sample_lib_full_outtrimmed, by = c("FID", "NSWID"))
# QLD locations
colnames(CSIRO_seedlot) <- c('pops', 'Type', 'Location', 'State', 'latitude', 'longitude', 'Alt.', 'Parents')
CSIRO_seedlot_subset <- CSIRO_seedlot %>% dplyr::select (pops, latitude, longitude)
outgroups$latitude[is.na(outgroups$latitude)] <- CSIRO_seedlot$latitude[match(outgroups$pops,CSIRO_seedlot$pops)][which(is.na(outgroups$latitude))]
outgroups$longitude[is.na(outgroups$longitude)] <- CSIRO_seedlot$longitude[match(outgroups$pops,CSIRO_seedlot$pops)][which(is.na(outgroups$longitude))]
# Adding libraries
outgroups_merged <- left_join(outgroups, outgroups_geno, by = "NSWID") %>% mutate(source="outgroups")
outgroups_merged[outgroups_merged$species == 'Melaleuca leucadendra', 'sample_lib_NSW'] <- 'S_868442_S1'
outgroups_merged[outgroups_merged$species == 'Melaleuca viridiflora', 'sample_lib_NSW'] <- 'S_861838_S2'
outgroups_merged_trim <- outgroups_merged %>% dplyr::select(sample_lib_NSW, species, source)
# Random dplyr::selection of NSW samples
set.seed(12345)
trim_parent_meta <-  parent_meta %>%
filter(!is.na(sample_lib_NSW), !is.na(species)) %>%
mutate(source="NSW_randsel")
parent_sel_rand <- slice_sample(trim_parent_meta, n=10)
parent_sel_rand_trim <- parent_sel_rand %>% dplyr::select(sample_lib_NSW, species, source)
# Lib name output list
merged_out_list <- rbind(parent_sel_rand_trim, outgroups_merged_trim) %>% filter (!is.na(sample_lib_NSW))
write.table(merged_out_list$sample_lib_NSW, file= "~/RBGSyd_Technical Officer/MQuin/Processing Meta/geno_out_library_list.txt", quote=FALSE, row.names=FALSE, col.names=FALSE)
merged_out_list_subset <- merged_out_list %>%
filter(grepl("^Melaleuca quinquenervia", species) | species == "Melaleuca nodosa") %>%
filter (sample_lib_NSW != c("NSW1158804_S107"))
write.table(merged_out_list_subset$sample_lib_NSW, file= "~/RBGSyd_Technical Officer/MQuin/Processing Meta/geno_out_library_list_subset.txt", quote=FALSE, row.names=FALSE, col.names=FALSE)
##Child datasets: Sample ID, IID, Library name, species name, heights, RGR, COI, library details. Merging full_table_trim, sample_list_mquin_PBI, seedling_mquin_rust, sample_lib
# Merging sample_lib and sample_list_mquin_PBI by IID
height_sample_lib <- grep("S_", sample_lib$LIBRARY, value = TRUE)
IID_sample_lib <- sub("^S_(\\d+).*", "\\1", height_sample_lib)
IID_height_sample_lib <- data.frame(IID=as.numeric(IID_sample_lib), LIBRARY=height_sample_lib)
height_IID <- merge(IID_height_sample_lib, sample_list_mquin_PBI, by="IID", all=TRUE)
# Joining seedling_mquin_rust
colnames(seedling_mquin_rust) <- c('LIBRARY', 'COI')
COI_height_IID <- merge(height_IID, seedling_mquin_rust, by="LIBRARY", all=TRUE)
# Adding species from full_table_trim
full_table_trim_species <- full_table_trim %>% dplyr::select(species, FID)
COI_height_IID <- left_join(COI_height_IID, full_table_trim_species, by="FID")
# Joining seedling ID and library by IID
seedlings_all_library <- left_join(IID_height_sample_lib, seedlings_all)
### Creating GWAS datasets
## GWAS seedling phenotype dataframe of Library name and phenotypes of height and COI
# Merging sample_lib and sample_list_mquin_PBI by IID
height_sample_lib <- grep("S_", sample_lib$LIBRARY, value = TRUE)
IID_sample_lib <- sub("^S_(\\d+).*", "\\1", height_sample_lib)
IID_height_sample_lib <- data.frame(IID=as.numeric(IID_sample_lib), LIBRARY=height_sample_lib)
height_IID <- merge(IID_height_sample_lib, sample_list_mquin_PBI, by="IID", all=TRUE)
# Generating meta data
height_IID <- inner_join(IID_height_sample_lib, sample_list_mquin_PBI, by="IID")
# Filtering datasets and converting datatype
seedling_heights <- height_IID %>%
dplyr::select(LIBRARY, HT1, HT2) %>%
filter(!is.na(HT1), !is.na(HT2))
seedling_heights$HT1 <- as.numeric(seedling_heights$HT1)
seedling_heights$HT2 <- as.numeric(seedling_heights$HT2)
#Calculating RGR
seedling_heights$RGR <- (log(seedling_heights$HT2) - log(seedling_heights$HT1))/25 #Date between 23/08/23 and 16/09/23)
seedling_heights_GWAS <- seedling_heights %>% dplyr::select (LIBRARY, RGR)
colnames(seedling_heights_GWAS) <- c("LIBRARY", "RGR")
mq_phenotype_height_COI <- merge(seedling_mquin_rust, seedling_heights_GWAS, by="LIBRARY", all=TRUE)
#write.csv(mq_phenotype_height_COI, file = "~/RBGSyd_Technical Officer/MQuin/Seedling GWAS/GWAS/meta/GWAS_phenotype_height_COI.csv", row.names = FALSE)
# GWAS HT2 no RGR dataset
seedling_heights_GWAS <- seedling_heights %>% dplyr::select (LIBRARY, HT2)
mq_phenotype_height_COI <- merge(seedling_mquin_rust, seedling_heights_GWAS, by="LIBRARY", all=TRUE)
#write.csv(mq_phenotype_height_COI, file = "~/RBGSyd_Technical Officer/MQuin/Seedling GWAS/GWAS/Iter 2/data/meta/GWAS_phenotype_height_foursqrtCOI_HT2.csv", row.names = FALSE)
# GWAS COI Binary
lib_RustScore <- left_join(IID_height_sample_lib, IID_RustScore, by = "IID") # From calculating metrics
#write.csv(lib_RustScore[,-c(1)], "~/RBGSyd_Technical Officer/MQuin/Processing Meta/lib_RustScore.csv", row.names = F)
# Manually changed in excel..
## GWAS parent phenotype dataframe of Library name and phenotype mean COI per all seedling individuals
# Creating dataframe of phenotyped seedling number and COI
subset_seedlings_all <- seedlings_all %>%
dplyr::select(COI, NSWID)
subset_sample_lib_full <- sample_lib_full %>%
dplyr::select(FID, NSWID, sample_lib_NSW)
breedingcoeff_df <- merge (subset_sample_lib_full, subset_seedlings_all, by = "NSWID", all=TRUE) #Creating dataset with FID, NSW library and coi
mean_breedingcoeff_df <- breedingcoeff_df %>%
filter (!is.na(COI)) %>%
group_by(FID) %>%
mutate(seedling_numb = n(), LIBRARY=sample_lib_NSW) %>%
dplyr::select(LIBRARY,FID,COI,seedling_numb)
# Calculating average COI by FID
breedingcoeff_parent <- mean_breedingcoeff_df %>%
group_by(LIBRARY) %>%
summarise(sd_COI = sd(COI)
,sqrt_mean_COI = sqrt(mean(COI))
,seedling_number = mean(seedling_numb))
#, weighted_mean_COI = weighted.mean(COI, seedling_numb)))
#Adding in LeavesShootInfect phenotype from parent_meta
parent_meta_subset <- parent_meta[,c(2,12,13)] %>%
filter(!is.na(LeavesShootInfect) & !is.na(rust_infection)) %>%
mutate(LeavesShootInfect = ifelse(rust_infection == "0A" |rust_infection == "0" & is.na(LeavesShootInfect), 0, LeavesShootInfect))
parent_GWAS_rust <- merge (breedingcoeff_df, parent_meta_subset, by = "FID", all=TRUE) %>%
group_by(FID)  %>%
mutate(seedling_numb = n(), LIBRARY=sample_lib_NSW) %>%
ungroup() %>%
dplyr::select (LIBRARY, rust_infection) %>%
filter(!is.na(LIBRARY))
parent_GWAS_LSI <- merge (breedingcoeff_df, parent_meta_subset, by = "FID") %>%
group_by(FID)  %>%
mutate(seedling_numb = n(), LIBRARY=sample_lib_NSW) %>%
ungroup() %>%
dplyr::select (LIBRARY, LeavesShootInfect) %>%
filter(!is.na(LIBRARY))
parent_GWAS_LSI$LeavesShootInfect <- gsub("1-5", "1", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("5-10", "2", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("10-50", "3", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("50-90", "4", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("90+", "5", parent_GWAS_LSI$LeavesShootInfect, fixed = TRUE)
parent_GWAS_LSI$LeavesShootInfect <- as.numeric(parent_GWAS_LSI$LeavesShootInfect)
parent_meta_rust <- distinct(parent_GWAS_rust)
parent_meta_LSI <- distinct(parent_GWAS_LSI)
parent_meta_pheno <- merge(parent_meta_rust, parent_meta_LSI, by="LIBRARY", all=TRUE)
#Merging COI and extra phenotypes together
parent_GWAS_pheno_summ <- merge(breedingcoeff_parent, parent_meta_pheno, by="LIBRARY") %>%
filter(!is.na(LIBRARY))
parent_GWAS_pheno_summ$LIBRARY <- gsub("^([^_]+_[^_]+)_(.*)$", "\\1", parent_GWAS_pheno_summ$LIBRARY)
parent_GWAS_pheno_summ$LIBRARY <- gsub("_", "", parent_GWAS_pheno_summ$LIBRARY)
colnames(parent_GWAS_pheno_summ)[1] <- "NSWID"
parent_GWAS_pheno_summ <- left_join(parent_GWAS_pheno_summ, parent_meta[,c(1,5,4)])
parent_GWAS_pheno_summ_dupe <- parent_GWAS_pheno_summ[!duplicated(parent_GWAS_pheno_summ$NSWID),]
write.csv(parent_GWAS_pheno_summ_dupe, file = "~/RBGSyd_Technical Officer/MQuin/Processing Meta/parent_COIBV-field.csv", row.names=FALSE)
##### NOTE THIS WAS REDONE IN blups.R WHERE AN ANIMAL MODEL WAS USED
#write.csv(breedingcoeff_parent, file = "~/RBGSyd_Technical Officer/MQuin/Parent/GWAS/meta/breedingcoeff_parent_sdCOI.csv", row.names = FALSE)
#write.csv(parent_GWAS_pheno_summ, file = "~/RBGSyd_Technical Officer/MQuin/Parent/GWAS/meta/breedingcoeff_parent_more_pheno.csv", row.names = FALSE)
#### Actual pops name
parent_meta_pops <- parent_meta %>% select(sample_lib_NSW, Pop, NSWID) %>% filter(!is.na(Pop)); colnames(parent_meta_pops)[2] <- "pops"
outgroups_merged_pops <- outgroups_merged %>% select(sample_lib_NSW, pops, NSWID)
pops_all_parents <- rbind(parent_meta_pops, outgroups_merged_pops)
pops_all_parents$pops[is.na(pops_all_parents$pops)] <- outgroups_merged$species[match(pops_all_parents$sample_lib_NSW[is.na(pops_all_parents$pops)], outgroups_merged$sample_lib_NSW)]
pops_all_parents_remna <- pops_all_parents %>% filter(!is.na(sample_lib_NSW)) %>% unique()
tissue_db_full$State <- ifelse(tissue_db_full$decimalLatitude>22.5, "QLD", "NSW")
tissue_db_locality_NSWID <- tissue_db_full %>% select(nswNumber, locality)
colnames(tissue_db_locality_NSWID) <- c("NSWID", "locality")
tissue_db_locality_pops <- tissue_db_full %>% select(eventKey, locality)
colnames(tissue_db_locality_pops ) <- c("pops", "locality")
pops_all_parents_remna_actual <- left_join(pops_all_parents_remna, tissue_db_locality_NSWID, by="NSWID"); pops_all_parents_remna_actual <- left_join(pops_all_parents_remna_actual, tissue_db_locality_pops, by="pops")
pops_all_parents_remna_actual <- pops_all_parents_remna_actual %>%
mutate(locality = coalesce(locality.x, locality.y)) %>%
select(-locality.x, -locality.y)
na_indices <- which(is.na(pops_all_parents_remna_actual$locality))
pops_all_parents_remna_actual$locality[na_indices] <- pops_all_parents_remna_actual$pops[na_indices]
colnames(pops_all_parents_remna_actual)[2] <- "Pop"
pops_all_parents_remna_actual <- left_join(pops_all_parents_remna_actual, (tissue_db_full %>% select(locality, State)))
pops_all_parents_remna_actual$State[is.na(pops_all_parents_remna_actual$State)] <- "QLD"
pops_all_parents_remna_actual$State[pops_all_parents_remna_actual$sample_lib_NSW == "NSW1158796_S117"] <- "NSW"
View(seedling_mquin_rust)
View(seedlings_all_library)
library(tidyverse)
# Reading in datasets
full_table <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Full_table.csv") # Maternal ID and the number of seedlings (n) grown
colnames(full_table) <- c("FID", "SeedlingNumb", "species", "latitude", "longitude", "Pop", "ID", "IID")
outgroups <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Outgroups.csv") #Manually curated outgroup list from other datasets and external info from Jason G Bragg
colnames(outgroups) <- c("SampleNumb", "WellID", "SampleName", "NSWID", "Concentration", "species", "Site", "pops", "latitude", "longitude")
sample_list_mquin_PBI <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/sample_list_mquin_PBI.csv") # IID is the defining ID for each seedling. Heights (cm) were measured at two points at 23/08/23 and 16/09/23. FID is the maternal ID.
parent_mquin_rust <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/mquin_rust_phenotypic_data_20201218.csv") # Rust data of parent individuals
colnames(parent_mquin_rust) <- c("species", "NSWID", "FID", "latitude", "longitude", "height", "rust_infection", "LeavesShootInfect", "LeavesShootRustSchore1.5", "MinorBranchDB", "MajorBranchDB", "CrownDensity", "Notes")
parent_mquin_rust$LeavesShootInfect <- gsub("1-May", "1-5", parent_mquin_rust$LeavesShootInfect)
parent_mquin_rust$LeavesShootInfect <- gsub("Oct-50", "10-50", parent_mquin_rust$LeavesShootInfect)
parent_mquin_rust$LeavesShootInfect <- gsub("5-Oct", "5-10", parent_mquin_rust$LeavesShootInfect)
#parent_jgb <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Melq_sampled_fam_info.csv") # Population allocation is wrong
#colnames(parent_jgb) <- c("species", "FID", "latitude", "longitude", "Pop")
tissue_db_full <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Tissue-2023-12-13_105348.csv")
tissue_db <- tissue_db_full %>% dplyr::select(nswNumber, acceptedName, eventKey, decimalLongitude, decimalLatitude)
colnames(tissue_db) <- c("FID", "species", "Pop", "longitude", "latitude")
seedling_mquin_rust <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/mq_phenotypes.csv") # Rust data of seedling individuals
sample_lib <- read.table("~/RBGSyd_Technical Officer/MQuin/Processing Meta/geno_library_list.txt", header=TRUE) # sample_lib has the library names of all samples that were genotyped. They are named in the format of S_IID_Sample# or NSWID_IID_Sample#
plate_1 <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/plates 1-7 library prep(1).csv") # 1. Meta data for the library names, includes sample number and sample ID used to generate the library names
plate_2 <- read.csv("~/RBGSyd_Technical Officer/MQuin/Processing Meta/plate 8 library prep(1).csv") # 2. Meta data for the library names, includes sample number and sample ID used to generate the library names
seedlings_all <- read.csv ("~/RBGSyd_Technical Officer/MQuin/Processing Meta/Mquin_samples_pheno.csv") # Meta data for seedlings including height and COI of all seedlings, including those that didn't get genotypes
colnames(seedlings_all) <- c("IID", "ph1", "ph2", "COI", "NSWID", "n","species", "latitude", 'longitude', "pop", "ID")
IID_RustScore <- read.csv ("~/RBGSyd_Technical Officer/MQuin/Processing Meta/IID_RustScore.csv")
CSIRO_seedlot <- read.csv ("~/RBGSyd_Technical Officer/MQuin/Processing Meta/CSIRO_Seedlot.csv") # Population information for CSIRO seedlot (Mquin QLD samples)
CSIRO_seedlot$Latitude <- gsub("S", "", CSIRO_seedlot$Latitude)
CSIRO_seedlot$Latitude <- as.numeric(paste0("-", CSIRO_seedlot$Latitude))
CSIRO_seedlot$Latitude <- as.numeric(CSIRO_seedlot$Latitude/10000)
CSIRO_seedlot$Longitude <- as.numeric(CSIRO_seedlot$Longitude/10000)
### Creating master datasets
## Parent datasets: NSWID, Library name, species name, infection, library details, outgroups
# Trimming full_table to one per maternal individual
full_table_trim <- full_table %>% group_by(FID) %>% filter(IID == max(IID)) %>% ungroup()
# Merging sample_lib and full_table_trim by FID first working with libraries of NSW_* then NSW*
sample_lib_NSW_ <- grep("NSW_", sample_lib$LIBRARY, value = TRUE)
FID <- sub("^NSW_(\\d+)_.*", "\\1", sample_lib_NSW_)
NSWID <- paste0("NSW", FID)
FID <- paste0("NSW_", FID)
sample_lib_NSW_ID <- as.data.frame(cbind(NSWID, FID, sample_lib_NSW_))
colnames(sample_lib_NSW_ID) <- c("NSWID", "FID", "sample_lib_NSW")
sample_lib_NSW <- grep("^NSW\\d+[^_]", sample_lib$LIBRARY, value = TRUE)
FID <- sub("^NSW(\\d+).*", "\\1", sample_lib_NSW)
NSWID <- paste0("NSW", FID)
FID <- paste0("NSW_", FID)
sample_lib_NSWID <- as.data.frame(cbind(NSWID, FID, sample_lib_NSW))
sample_lib_NSWBoth <- rbind(sample_lib_NSW_ID, sample_lib_NSWID)
sample_lib_full <- merge(sample_lib_NSWBoth, full_table_trim, by="FID", all=TRUE)
parent_meta <- merge(sample_lib_full, parent_mquin_rust, by=c("NSWID","FID", "species", "longitude", "latitude"), all=TRUE)
parent_meta$Pop[is.na(parent_meta$Pop)] <- tissue_db$Pop[match(parent_meta$NSWID,tissue_db$FID)][which(is.na(parent_meta$Pop))]
#parent_meta$Pop[is.na(parent_meta$Pop)] <- parent_jgb$Pop[match(parent_meta$NSWID,parent_jgb$FID)][which(is.na(parent_meta$Pop))]
parent_meta$longitude[is.na(parent_meta$longitude)] <- tissue_db$longitude[match(parent_meta$NSWID,tissue_db$FID)][which(is.na(parent_meta$longitude))]
parent_meta$latitude[is.na(parent_meta$latitude)] <- tissue_db$latitude[match(parent_meta$NSWID,tissue_db$FID)][which(is.na(parent_meta$latitude))]
outgroups$latitude[is.na(outgroups$latitude)] <- CSIRO_seedlot$Latitude[match(outgroups$pops,CSIRO_seedlot$pops)][which(is.na(outgroups$latitude))]
## Outgroup datasets
# Library names
outgroups_NSW <- grep("^NSW\\d+[^_]", outgroups$NSWID, value = TRUE)
FID <- sub("^NSW(\\d+).*", "\\1", outgroups_NSW)
NSWID <- paste0("NSW", FID)
FID <- paste0("NSW_", FID)
outgroups_NSWID <- as.data.frame(cbind(NSWID, FID))
sample_lib_full_outtrimmed <- sample_lib_full %>% dplyr::select (FID, NSWID, sample_lib_NSW)
outgroups_geno <- merge(outgroups_NSWID, sample_lib_full_outtrimmed, by = c("FID", "NSWID"))
# QLD locations
colnames(CSIRO_seedlot) <- c('pops', 'Type', 'Location', 'State', 'latitude', 'longitude', 'Alt.', 'Parents')
CSIRO_seedlot_subset <- CSIRO_seedlot %>% dplyr::select (pops, latitude, longitude)
outgroups$latitude[is.na(outgroups$latitude)] <- CSIRO_seedlot$latitude[match(outgroups$pops,CSIRO_seedlot$pops)][which(is.na(outgroups$latitude))]
outgroups$longitude[is.na(outgroups$longitude)] <- CSIRO_seedlot$longitude[match(outgroups$pops,CSIRO_seedlot$pops)][which(is.na(outgroups$longitude))]
# Adding libraries
outgroups_merged <- left_join(outgroups, outgroups_geno, by = "NSWID") %>% mutate(source="outgroups")
outgroups_merged[outgroups_merged$species == 'Melaleuca leucadendra', 'sample_lib_NSW'] <- 'S_868442_S1'
outgroups_merged[outgroups_merged$species == 'Melaleuca viridiflora', 'sample_lib_NSW'] <- 'S_861838_S2'
outgroups_merged_trim <- outgroups_merged %>% dplyr::select(sample_lib_NSW, species, source)
# Random dplyr::selection of NSW samples
set.seed(12345)
trim_parent_meta <-  parent_meta %>%
filter(!is.na(sample_lib_NSW), !is.na(species)) %>%
mutate(source="NSW_randsel")
parent_sel_rand <- slice_sample(trim_parent_meta, n=10)
parent_sel_rand_trim <- parent_sel_rand %>% dplyr::select(sample_lib_NSW, species, source)
# Lib name output list
merged_out_list <- rbind(parent_sel_rand_trim, outgroups_merged_trim) %>% filter (!is.na(sample_lib_NSW))
write.table(merged_out_list$sample_lib_NSW, file= "~/RBGSyd_Technical Officer/MQuin/Processing Meta/geno_out_library_list.txt", quote=FALSE, row.names=FALSE, col.names=FALSE)
merged_out_list_subset <- merged_out_list %>%
filter(grepl("^Melaleuca quinquenervia", species) | species == "Melaleuca nodosa") %>%
filter (sample_lib_NSW != c("NSW1158804_S107"))
write.table(merged_out_list_subset$sample_lib_NSW, file= "~/RBGSyd_Technical Officer/MQuin/Processing Meta/geno_out_library_list_subset.txt", quote=FALSE, row.names=FALSE, col.names=FALSE)
##Child datasets: Sample ID, IID, Library name, species name, heights, RGR, COI, library details. Merging full_table_trim, sample_list_mquin_PBI, seedling_mquin_rust, sample_lib
# Merging sample_lib and sample_list_mquin_PBI by IID
height_sample_lib <- grep("S_", sample_lib$LIBRARY, value = TRUE)
IID_sample_lib <- sub("^S_(\\d+).*", "\\1", height_sample_lib)
IID_height_sample_lib <- data.frame(IID=as.numeric(IID_sample_lib), LIBRARY=height_sample_lib)
height_IID <- merge(IID_height_sample_lib, sample_list_mquin_PBI, by="IID", all=TRUE)
# Joining seedling_mquin_rust
colnames(seedling_mquin_rust) <- c('LIBRARY', 'COI')
COI_height_IID <- merge(height_IID, seedling_mquin_rust, by="LIBRARY", all=TRUE)
# Adding species from full_table_trim
full_table_trim_species <- full_table_trim %>% dplyr::select(species, FID)
COI_height_IID <- left_join(COI_height_IID, full_table_trim_species, by="FID")
# Joining seedling ID and library by IID
seedlings_all_library <- left_join(IID_height_sample_lib, seedlings_all)
### Creating GWAS datasets
## GWAS seedling phenotype dataframe of Library name and phenotypes of height and COI
# Merging sample_lib and sample_list_mquin_PBI by IID
height_sample_lib <- grep("S_", sample_lib$LIBRARY, value = TRUE)
IID_sample_lib <- sub("^S_(\\d+).*", "\\1", height_sample_lib)
IID_height_sample_lib <- data.frame(IID=as.numeric(IID_sample_lib), LIBRARY=height_sample_lib)
height_IID <- merge(IID_height_sample_lib, sample_list_mquin_PBI, by="IID", all=TRUE)
# Generating meta data
height_IID <- inner_join(IID_height_sample_lib, sample_list_mquin_PBI, by="IID")
# Filtering datasets and converting datatype
seedling_heights <- height_IID %>%
dplyr::select(LIBRARY, HT1, HT2) %>%
filter(!is.na(HT1), !is.na(HT2))
seedling_heights$HT1 <- as.numeric(seedling_heights$HT1)
seedling_heights$HT2 <- as.numeric(seedling_heights$HT2)
#Calculating RGR
seedling_heights$RGR <- (log(seedling_heights$HT2) - log(seedling_heights$HT1))/25 #Date between 23/08/23 and 16/09/23)
seedling_heights_GWAS <- seedling_heights %>% dplyr::select (LIBRARY, RGR)
colnames(seedling_heights_GWAS) <- c("LIBRARY", "RGR")
mq_phenotype_height_COI <- merge(seedling_mquin_rust, seedling_heights_GWAS, by="LIBRARY", all=TRUE)
#write.csv(mq_phenotype_height_COI, file = "~/RBGSyd_Technical Officer/MQuin/Seedling GWAS/GWAS/meta/GWAS_phenotype_height_COI.csv", row.names = FALSE)
# GWAS HT2 no RGR dataset
seedling_heights_GWAS <- seedling_heights %>% dplyr::select (LIBRARY, HT2)
mq_phenotype_height_COI <- merge(seedling_mquin_rust, seedling_heights_GWAS, by="LIBRARY", all=TRUE)
#write.csv(mq_phenotype_height_COI, file = "~/RBGSyd_Technical Officer/MQuin/Seedling GWAS/GWAS/Iter 2/data/meta/GWAS_phenotype_height_foursqrtCOI_HT2.csv", row.names = FALSE)
# GWAS COI Binary
lib_RustScore <- left_join(IID_height_sample_lib, IID_RustScore, by = "IID") # From calculating metrics
#write.csv(lib_RustScore[,-c(1)], "~/RBGSyd_Technical Officer/MQuin/Processing Meta/lib_RustScore.csv", row.names = F)
# Manually changed in excel..
## GWAS parent phenotype dataframe of Library name and phenotype mean COI per all seedling individuals
# Creating dataframe of phenotyped seedling number and COI
subset_seedlings_all <- seedlings_all %>%
dplyr::select(COI, NSWID)
subset_sample_lib_full <- sample_lib_full %>%
dplyr::select(FID, NSWID, sample_lib_NSW)
breedingcoeff_df <- merge (subset_sample_lib_full, subset_seedlings_all, by = "NSWID", all=TRUE) #Creating dataset with FID, NSW library and coi
mean_breedingcoeff_df <- breedingcoeff_df %>%
filter (!is.na(COI)) %>%
group_by(FID) %>%
mutate(seedling_numb = n(), LIBRARY=sample_lib_NSW) %>%
dplyr::select(LIBRARY,FID,COI,seedling_numb)
# Calculating average COI by FID
breedingcoeff_parent <- mean_breedingcoeff_df %>%
group_by(LIBRARY) %>%
summarise(sd_COI = sd(COI)
,sqrt_mean_COI = sqrt(mean(COI))
,seedling_number = mean(seedling_numb))
#, weighted_mean_COI = weighted.mean(COI, seedling_numb)))
#Adding in LeavesShootInfect phenotype from parent_meta
parent_meta_subset <- parent_meta[,c(2,12,13)] %>%
filter(!is.na(LeavesShootInfect) & !is.na(rust_infection)) %>%
mutate(LeavesShootInfect = ifelse(rust_infection == "0A" |rust_infection == "0" & is.na(LeavesShootInfect), 0, LeavesShootInfect))
parent_GWAS_rust <- merge (breedingcoeff_df, parent_meta_subset, by = "FID", all=TRUE) %>%
group_by(FID)  %>%
mutate(seedling_numb = n(), LIBRARY=sample_lib_NSW) %>%
ungroup() %>%
dplyr::select (LIBRARY, rust_infection) %>%
filter(!is.na(LIBRARY))
parent_GWAS_LSI <- merge (breedingcoeff_df, parent_meta_subset, by = "FID") %>%
group_by(FID)  %>%
mutate(seedling_numb = n(), LIBRARY=sample_lib_NSW) %>%
ungroup() %>%
dplyr::select (LIBRARY, LeavesShootInfect) %>%
filter(!is.na(LIBRARY))
parent_GWAS_LSI$LeavesShootInfect <- gsub("1-5", "1", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("5-10", "2", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("10-50", "3", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("50-90", "4", parent_GWAS_LSI$LeavesShootInfect)
parent_GWAS_LSI$LeavesShootInfect <- gsub("90+", "5", parent_GWAS_LSI$LeavesShootInfect, fixed = TRUE)
parent_GWAS_LSI$LeavesShootInfect <- as.numeric(parent_GWAS_LSI$LeavesShootInfect)
parent_meta_rust <- distinct(parent_GWAS_rust)
parent_meta_LSI <- distinct(parent_GWAS_LSI)
parent_meta_pheno <- merge(parent_meta_rust, parent_meta_LSI, by="LIBRARY", all=TRUE)
#Merging COI and extra phenotypes together
parent_GWAS_pheno_summ <- merge(breedingcoeff_parent, parent_meta_pheno, by="LIBRARY") %>%
filter(!is.na(LIBRARY))
parent_GWAS_pheno_summ$LIBRARY <- gsub("^([^_]+_[^_]+)_(.*)$", "\\1", parent_GWAS_pheno_summ$LIBRARY)
parent_GWAS_pheno_summ$LIBRARY <- gsub("_", "", parent_GWAS_pheno_summ$LIBRARY)
colnames(parent_GWAS_pheno_summ)[1] <- "NSWID"
parent_GWAS_pheno_summ <- left_join(parent_GWAS_pheno_summ, parent_meta[,c(1,5,4)])
parent_GWAS_pheno_summ_dupe <- parent_GWAS_pheno_summ[!duplicated(parent_GWAS_pheno_summ$NSWID),]
write.csv(parent_GWAS_pheno_summ_dupe, file = "~/RBGSyd_Technical Officer/MQuin/Processing Meta/parent_COIBV-field.csv", row.names=FALSE)
##### NOTE THIS WAS REDONE IN blups.R WHERE AN ANIMAL MODEL WAS USED
#write.csv(breedingcoeff_parent, file = "~/RBGSyd_Technical Officer/MQuin/Parent/GWAS/meta/breedingcoeff_parent_sdCOI.csv", row.names = FALSE)
#write.csv(parent_GWAS_pheno_summ, file = "~/RBGSyd_Technical Officer/MQuin/Parent/GWAS/meta/breedingcoeff_parent_more_pheno.csv", row.names = FALSE)
#### Actual pops name
parent_meta_pops <- parent_meta %>% select(sample_lib_NSW, Pop, NSWID) %>% filter(!is.na(Pop)); colnames(parent_meta_pops)[2] <- "pops"
outgroups_merged_pops <- outgroups_merged %>% select(sample_lib_NSW, pops, NSWID)
pops_all_parents <- rbind(parent_meta_pops, outgroups_merged_pops)
pops_all_parents$pops[is.na(pops_all_parents$pops)] <- outgroups_merged$species[match(pops_all_parents$sample_lib_NSW[is.na(pops_all_parents$pops)], outgroups_merged$sample_lib_NSW)]
pops_all_parents_remna <- pops_all_parents %>% filter(!is.na(sample_lib_NSW)) %>% unique()
tissue_db_full$State <- ifelse(tissue_db_full$decimalLatitude>22.5, "QLD", "NSW")
tissue_db_locality_NSWID <- tissue_db_full %>% select(nswNumber, locality)
colnames(tissue_db_locality_NSWID) <- c("NSWID", "locality")
tissue_db_locality_pops <- tissue_db_full %>% select(eventKey, locality)
colnames(tissue_db_locality_pops ) <- c("pops", "locality")
pops_all_parents_remna_actual <- left_join(pops_all_parents_remna, tissue_db_locality_NSWID, by="NSWID"); pops_all_parents_remna_actual <- left_join(pops_all_parents_remna_actual, tissue_db_locality_pops, by="pops")
pops_all_parents_remna_actual <- pops_all_parents_remna_actual %>%
mutate(locality = coalesce(locality.x, locality.y)) %>%
select(-locality.x, -locality.y)
na_indices <- which(is.na(pops_all_parents_remna_actual$locality))
pops_all_parents_remna_actual$locality[na_indices] <- pops_all_parents_remna_actual$pops[na_indices]
colnames(pops_all_parents_remna_actual)[2] <- "Pop"
pops_all_parents_remna_actual <- left_join(pops_all_parents_remna_actual, (tissue_db_full %>% select(locality, State)))
pops_all_parents_remna_actual$State[is.na(pops_all_parents_remna_actual$State)] <- "QLD"
pops_all_parents_remna_actual$State[pops_all_parents_remna_actual$sample_lib_NSW == "NSW1158796_S117"] <- "NSW"
View(breedingcoeff_parent)
View(breedingcoeff_parent)
View(mean_breedingcoeff_df)
View(parent_meta_rust)
View(parent_meta_pheno)
View(parent_meta_subset)
View(breedingcoeff_df)
# Create a data frame with the provided data
seed_par <- data.frame(
NSWID = c("NSW1079720", "NSW1079710", "NSW1079727", "NSW1079733", "NSW1079732",
"NSW1079691", "NSW1079701", "NSW1079730", "NSW1079722", "NSW1079686",
"NSW1079719", "NSW1079729", "NSW1079696", "NSW1079715", "NSW1079724",
"NSW1079714", "NSW1079737", "NSW1079725", "NSW1079711"),
seed_g = c(0.323, 0.489, 0.86, 0.398, 0.152,
0.534, 1.107, 0.188, 0.62, 1.165,
0.589, 1.443, 0.645, 1.429, 0.401,
1.073, 1.107, 0.106, 0.164)
)
left_join(seed_par, breedingcoeff_df)
View(left_join(seed_par, breedingcoeff_parent))
left_join(breedingcoeff_parent, breedingcoeff_df)
View(breedingcoeff_df)
colnames(breedingcoeff_df)[3] <- "LIBRARY"
left_join(breedingcoeff_parent, breedingcoeff_df)
tmp <- unique(left_join(breedingcoeff_parent, breedingcoeff_df) %>% select(NSWID, sd_COI, sqrt_mean_COI))
View(left_join(seed_par, tmp))
parent_mquin_rust
tmp_3 <- left_join(tmp_2, parent_mquin_rust)
tmp_2 <- left_join(seed_par, tmp)
tmp_3 <- left_join(tmp_2, parent_mquin_rust)
View(tmp_3)
names(tmp_3)
tmp_3 <- left_join(tmp_2, parent_mquin_rust) %>% select (NSWID, sd_COI, sqrt_mean_COI, seed_g, latitde, longitude)
tmp_3 <- left_join(tmp_2, parent_mquin_rust) %>% select (NSWID, sd_COI, sqrt_mean_COI, seed_g, latitude, longitude)
View(tmp_3)
tmp_3$mean_COI <- (tmp_3$sqrt_mean_COI)^2
View(tmp_3)
tmp_3$mean_COI <- (tmp_3$sqrt_mean_COI)^4
tmp_3$mean_COI <- (tmp_3$sqrt_mean_COI)^2
